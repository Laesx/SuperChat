/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package superchat.GUI;

import superchat.Cliente;
import superchat.GUI.Modelos.ModeloLista;

import javax.swing.*;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import java.awt.*;
import java.io.IOException;
import java.net.UnknownHostException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author losgu
 */
public class Chat extends javax.swing.JFrame {
    
    private Cliente cliente;

    private DefaultListModel<String> modeloLista;

    /**
     * Creates new form Chat
     */
    public Chat() {
        initComponents();
        startCliente();

        //modeloLista = new ModeloLista();
        modeloLista = new DefaultListModel<>();
        jList.setModel(modeloLista);

        cliente.setChat(this);

        cliente.enviarMensajeTexto("$getRooms");
    }

    public void addRoom(String room){
        System.out.println("A침adiendo sala: " + room);
        modeloLista.addElement(room);
    }
    
    private void startCliente(){
        String mensaje;

        //Abrimos la comunicaci칩n con el puerto de servicio
        cliente = new Cliente("localhost",49175);
        try {
            //Abrimos la comunicaci칩n
            cliente.start();
            cliente.abrirCanalesDeTexto();

            //cliente.cerrarCanalesDeTexto();
            //cliente.stop();

        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        entradaTexto = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("SUPER-CHAT");

        jList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList);

        textPane.setEditable(false);
        jScrollPane2.setViewportView(textPane);

        entradaTexto.setToolTipText("Introduzca su mensaje...");
        entradaTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                entradaTextoKeyPressed(evt);
            }
        });

        botonEnviar.setText("Enviar");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });
        botonEnviar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                botonEnviarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(entradaTexto, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonEnviar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entradaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEnviar)))
        );

        jTabbedPane1.addTab("tab2", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        // TODO add your handling code here:
        sendMessage();
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void botonEnviarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonEnviarKeyPressed
        
    }//GEN-LAST:event_botonEnviarKeyPressed

    private void entradaTextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entradaTextoKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            sendMessage();
        }
    }//GEN-LAST:event_entradaTextoKeyPressed

    private void jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jListValueChanged

    /**
     * Envia el mensaje al servidor y lo a침ade en el chat
     */
    private void sendMessage(){
        /*
        cliente.enviarMensajeTexto(entradaTexto.getText());
        textPane.setText(textPane.getText() + "\n" + entradaTexto.getText());
        entradaTexto.setText("");*/
        cliente.enviarMensajeTexto(entradaTexto.getText());

        // Get the StyledDocument from the JTextPane
        StyledDocument doc = textPane.getStyledDocument();

        // Define a style for user's text
        Style styleUser = textPane.addStyle("User Style", null);
        StyleConstants.setForeground(styleUser, Color.DARK_GRAY);
        StyleConstants.setBold(styleUser, true);

        // Add user's text with the defined style
        try {
            doc.insertString(doc.getLength(), "\n" +
                    LocalDateTime.now().format(DateTimeFormatter.ofPattern("(HH:mm)")) + " " +
                    cliente.getNombre() + ": " + entradaTexto.getText(), styleUser);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }

        entradaTexto.setText("");
    }

    public void addMessage(String message){
        // Get the StyledDocument from the JTextPane
        StyledDocument doc = textPane.getStyledDocument();

        // Define a style for server's text
        Style styleServer = textPane.addStyle("Message Style", null);
        StyleConstants.setForeground(styleServer, Color.BLUE);
        StyleConstants.setBold(styleServer, false);

        // Add server's text with the defined style
        try {
            doc.insertString(doc.getLength(), "\n" + message, styleServer);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
        
    }

    public void addServerMessage(String message) {
        // Get the StyledDocument from the JTextPane
        StyledDocument doc = textPane.getStyledDocument();

        // Define a style for server's text
        Style styleServer = textPane.addStyle("Server Style", null);
        StyleConstants.setForeground(styleServer, Color.RED);
        StyleConstants.setBold(styleServer, false);

        // Add server's text with the defined style
        try {
            doc.insertString(doc.getLength(), "\n" + message, styleServer);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEnviar;
    private javax.swing.JTextField entradaTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables
}
